!function(){"use strict";function a(a,e){function i(i,n){var u;return angular.forEach(r,function(a){if(a.name===i)return void(u=a)}),u||(u=new t(i,n,a,e),r.push(u)),u}var n=this,r=[];n.get=i}function t(a,t,e,i){function n(){p.data=[],u()}function r(a,t){a&&(p.data=i(p.data,a,t),u())}function u(){p.subject.onNext(angular.copy(p.data))}function o(a){var t;return angular.forEach(p.data,function(e){if(e[p.keyField]===a)return void(t=angular.copy(e))}),t}function c(a){p.multicasted.subscribe(a),p.multicasted.connect()}function d(a){v(a);var t=!1;if(angular.forEach(p.data,function(e){if(e[p.keyField]===a[p.keyField])return void(t=!0)}),t)throw"Entity with '"+p.keyField+"': "+a[p.keyField]+" already existed.";p.data.push(angular.copy(a)),u()}function l(a){v(a);var t=!1;if(angular.forEach(p.data,function(e,i){if(e[p.keyField]===a[p.keyField])return t=!0,p.data.splice(i,1,angular.copy(a)),void u()}),!t)throw"Entity with '"+p.keyField+"': "+a[p.keyField]+" not existed."}function f(a){v(a);var t=!1;angular.forEach(p.data,function(e,i){if(e[p.keyField]===a[p.keyField])return t=!0,void p.data.splice(i,1,angular.copy(a))}),t||p.data.push(angular.copy(a)),u()}function s(a){angular.forEach(a,function(a){v(a);var t=!1;angular.forEach(p.data,function(e,i){if(e[p.keyField]===a[p.keyField])return t=!0,void p.data.splice(i,1,angular.copy(a))}),t||p.data.push(angular.copy(a))}),u()}function y(a){angular.forEach(p.data,function(t,e){if(t[p.keyField]===a)return p.data.splice(e,1),void u()})}function v(a){if(!a[p.keyField])throw"Entity is not valid."}var p=this;p.data=[],p.name=a,p.keyField=t||"id",p.listObservable=e.Observable.create(function(a){a.next(angular.copy(p.data))}),p.subject=new e.Subject,p.multicasted=p.listObservable.multicast(p.subject),p.add=d,p.addList=s,p.addOrUpdate=f,p.clear=n,p.find=o,p.observeList=c,p.remove=y,p.sort=r,p.update=l}angular.module("tw.repositories",["rx"]).service("twRepositories",a),a.$inject=["rx","orderByFilter"]}();